
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.ChallengesScalarFieldEnum = {
  id: 'id',
  c_target: 'c_target',
  c_description: 'c_description',
  title: 'title',
  time_created: 'time_created'
};

exports.Prisma.Open_challengesScalarFieldEnum = {
  challenge_id: 'challenge_id',
  submissions: 'submissions'
};

exports.Prisma.Targeted_challengesScalarFieldEnum = {
  challenge_id: 'challenge_id',
  value_bet_for: 'value_bet_for',
  value_bet_against: 'value_bet_against',
  specific_target: 'specific_target'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};
exports.c_target_type = exports.$Enums.c_target_type = {
  targeted: 'targeted',
  open: 'open'
};

exports.Prisma.ModelName = {
  challenges: 'challenges',
  open_challenges: 'open_challenges',
  targeted_challenges: 'targeted_challenges'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Users\\diego\\Documents\\Coding\\pawnprizes\\generated\\prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\Users\\diego\\Documents\\Coding\\pawnprizes\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../.env"
  },
  "relativePath": "../../prisma",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n  output   = \"../generated/prisma\"\n}\n\ndatasource db {\n  provider = \"postgres\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel challenges {\n  id                  Int                  @id @default(autoincrement())\n  c_target            c_target_type\n  c_description       String               @db.VarChar(280)\n  title               String               @db.VarChar(64)\n  time_created        DateTime             @db.Timestamp(6)\n  open_challenges     open_challenges?\n  targeted_challenges targeted_challenges?\n}\n\nmodel open_challenges {\n  challenge_id Int        @id\n  submissions  Int\n  challenges   challenges @relation(fields: [challenge_id], references: [id], onDelete: NoAction, onUpdate: NoAction)\n}\n\nmodel targeted_challenges {\n  challenge_id      Int        @id\n  value_bet_for     Int\n  value_bet_against Int\n  specific_target   String     @db.VarChar(50)\n  challenges        challenges @relation(fields: [challenge_id], references: [id], onDelete: NoAction, onUpdate: NoAction)\n}\n\nenum c_target_type {\n  targeted\n  open\n}\n",
  "inlineSchemaHash": "fdfb55e63ebcd1facfefaa9fd897a71893e20007c4d63d65b6779f62d207b0dc",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"challenges\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"c_target\",\"kind\":\"enum\",\"type\":\"c_target_type\"},{\"name\":\"c_description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"time_created\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"open_challenges\",\"kind\":\"object\",\"type\":\"open_challenges\",\"relationName\":\"challengesToopen_challenges\"},{\"name\":\"targeted_challenges\",\"kind\":\"object\",\"type\":\"targeted_challenges\",\"relationName\":\"challengesTotargeted_challenges\"}],\"dbName\":null},\"open_challenges\":{\"fields\":[{\"name\":\"challenge_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"submissions\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"challenges\",\"kind\":\"object\",\"type\":\"challenges\",\"relationName\":\"challengesToopen_challenges\"}],\"dbName\":null},\"targeted_challenges\":{\"fields\":[{\"name\":\"challenge_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"value_bet_for\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"value_bet_against\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"specific_target\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"challenges\",\"kind\":\"object\",\"type\":\"challenges\",\"relationName\":\"challengesTotargeted_challenges\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

